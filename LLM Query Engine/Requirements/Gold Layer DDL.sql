--V_SMM_DAILY_BRAND_SALES

create or replace view REPORTING.GOLD_SALES.V_SMM_DAILY_BRAND_SALES as
SELECT
-- Date Dimensions
	 CAL.FISCAL_DATE AS TRANSACTION_DT
    ,CAL.FISCAL_YEAR AS TRANSACTION_YEAR
    ,CAL.FISCAL_MONTH AS TRANSACTION_MONTH --num
    ,CAL.FISCAL_YEAR||'-'||LPAD(CAL.FISCAL_MONTH,2,0) AS TRANSACTION_YEAR_MONTH
    ,LPAD(CAL.FISCAL_MONTH,2,0)||' '||CAL.FISCAL_MONTH_NAME AS TRANSACTION_MONTH_NAME
    ,CAL.FISCAL_QUARTER AS TRANSACTION_QUARTER
    ,'DAY-'||CAL.FISCAL_DAY_OF_MONTH AS TRANSACTION_DAY_OF_MONTH
    ,CAL.FISCAL_YEAR||LPAD(CAL.FISCAL_WEEK_OF_YEAR,2,0) AS TRANSACTION_WEEK_OF_YEAR

-- Location Dimensions
    ,STR.STORE_NUMBER::VARCHAR AS STORE_NUMBER
    ,STR.STORE_NAME
    ,STR.STORE_NUMBER||'-'||STR.STORE_NAME AS STORE_NUM_NAME
    ,STR.CITY
    ,STR.STATE
    ,DC.DISTRIBUTION_CENTER_ID::VARCHAR AS REGION

-- Sales Rep
    ,SR.SALES_REP_NUMBER::VARCHAR AS SALES_REP_NUMBER
    ,SR.SALES_REP_NAME
	,SR.SALES_REP_NUMBER||'-'||SR.SALES_REP_NAME AS SALES_REP_NUM_NAME

---Category Dimension---
/*    ,CAT.CATEGORY_ID::VARCHAR AS CATEGORY_CODE
    ,CAT.CATEGORY_NAME
    ,CAT.CATEGORY_ID||'-'||CAT.CATEGORY_NAME AS CATEGORY_CODE_NAME
    ,CATG.GROUP_ID
    ,CATGN.GROUP_NAME AS CATEGORY_GROUP_NAME
    ,CATG.GROUP_ID||'-'||CATGN.GROUP_NAME AS CATEGORY_GROUP_ID_NAME
*/
---Brand Dimension
    ,BRND.BRAND_NAME
-- Sales metrics
    ,SUM(WOI.QUANTITY) AS QUANTITY
    ,SUM(WOI.EXTENDED_COST) AS COST
    ,SUM(WOI.EXTENDED_AMT) AS DAILY_SALES
    ,SUM(WOI.GP_AMT) AS GROSS_PROFIT
-- GP %------------
    ,CASE
        WHEN DAILY_SALES = 0 THEN 0.00
        ELSE ((GROSS_PROFIT/NULLIF(DAILY_SALES,0))*100)::NUMBER(18,2)
     END AS GP_PERCENT

--FROM PART---
FROM
--Fetching only active open and invoiced orders from header table--1,554,204--3,890,238--1.6M
    ANALYTICS.SILVER_SALES.T_FCT_WORK_ORDER_HEADER AS WOH
--FISCAL CALENDAR
JOIN ANALYTICS.SILVER_SALES.T_DIM_DATE CAL
    ON WOH.TRANSACTION_DATE_SK = CAL.DATE_KEY
    AND WOH.IS_CURRENT_FLAG = TRUE
    AND UPPER(TRIM(WOH.WORK_ORDER_STATUS)) IN ('', 'I')
    -- Filter for past 2 years from current date
    AND CAL.FISCAL_DATE >= DATEADD('YEAR', -2, CURRENT_DATE())
--Work order item details table
JOIN ANALYTICS.SILVER_SALES.T_FCT_WORK_ORDER_ITEM_DETAILS AS WOI
	ON  WOI.IS_CURRENT_FLAG = TRUE
	AND WOH.STORE_NUMBER = WOI.STORE_NUMBER
	AND WOH.FORM_TYPE_CODE = WOI.FORM_TYPE_CODE
	AND WOH.POS_PREFIX = WOI.POS_PREFIX
	AND WOH.WORK_ORDER_NUMBER = WOI.WORK_ORDER_NUMBER
--STORE
LEFT JOIN ANALYTICS.SILVER_SALES.T_DIM_STORE STR
	ON WOH.STORE_NUMBER = STR.STORE_NUMBER
    AND STR.IS_CURRENT_FLAG = TRUE
--DISTRIBUTION CENTER
LEFT JOIN ANALYTICS.SILVER_SALES.T_DIM_DISTRIBUTION_CENTER DC --TYPE-1
    ON WOH.STORE_NUMBER = DC.STORE_ID
--SALES REP
LEFT JOIN ANALYTICS.SILVER_SALES.T_DIM_SALES_REP SR
	ON WOH.SALES_REP_SK = SR.SALES_REP_SK
--ITEM
LEFT JOIN ANALYTICS.SILVER_SALES.T_DIM_PRODUCT ITM
	ON WOI.PRODUCT_SK = ITM.PRODUCT_SK
/*--CATAGORY
LEFT JOIN ANALYTICS.SILVER_SALES.T_DIM_INVENTORY_CATEGORY CAT
	ON ITM.INVENTORY_CATEGORY_SK = CAT.INVENTORY_CATEGORY_SK
--CATAGORY GROUP
LEFT JOIN ANALYTICS.SILVER_SALES.T_DIM_CATEGORY_GROUP CATG
	ON CAT.CATEGORY_ID = CATG.CATEGORY_ID
--CATAGORY GROUP NAME
LEFT JOIN ANALYTICS.SILVER_SALES.T_DIM_CATEGORY_GROUP_NAME CATGN
	ON CATG.GROUP_ID = CATGN.GROUP_ID*/
---Brand Name
LEFT JOIN ANALYTICS.SILVER_SALES.T_DIM_ITEM_ADD_ON IAO
    ON ITM.ITEM_NUMBER = IAO.ITEM_NUMBER
LEFT JOIN ANALYTICS.SILVER_SALES.T_DIM_BRAND BRND
    ON IAO.BRAND_CODE = BRND.BRAND_ID
--GROUPING DIMENSIONS
GROUP BY
     CAL.FISCAL_DATE
    ,CAL.FISCAL_YEAR
    ,CAL.FISCAL_MONTH
    ,CAL.FISCAL_MONTH_NAME
    ,CAL.FISCAL_QUARTER
    ,CAL.FISCAL_DAY_OF_MONTH
    ,CAL.FISCAL_WEEK_OF_YEAR
    ,STR.STORE_NUMBER
    ,STR.STORE_NAME
    ,STR.CITY
    ,STR.STATE
    ,DC.DISTRIBUTION_CENTER_ID
    ,SR.SALES_REP_NUMBER
    ,SR.SALES_REP_NAME
/*    ,CAT.CATEGORY_ID
    ,CAT.CATEGORY_NAME
    ,CATG.GROUP_ID
    ,CATGN.GROUP_NAME*/
    ,BRND.BRAND_NAME;
	
	
----------------------------------------------------------------------------

--V_SMM_DAILY_SALES

create or replace view REPORTING.GOLD_SALES.V_SMM_DAILY_SALES as
SELECT
-- Work Order Status
    CASE    WHEN TRIM(WOH.WORK_ORDER_STATUS) = '' THEN 'Open'
            WHEN TRIM(WOH.WORK_ORDER_STATUS) = 'I' THEN 'Invoiced'
            ELSE 'Other-Not-Recognized'
    END AS WORK_ORDER_STATUS
-- Date Dimensions
	,CAL.FISCAL_DATE AS TRANSACTION_DT
    ,CAL.FISCAL_YEAR AS TRANSACTION_YEAR
    ,CAL.FISCAL_MONTH AS TRANSACTION_MONTH --num
    ,CAL.FISCAL_YEAR||'-'||LPAD(CAL.FISCAL_MONTH,2,0) AS TRANSACTION_YEAR_MONTH
    ,LPAD(CAL.FISCAL_MONTH,2,0)||' '||CAL.FISCAL_MONTH_NAME AS TRANSACTION_MONTH_NAME
    ,CAL.FISCAL_QUARTER AS TRANSACTION_QUARTER
    ,'DAY-'||CAL.FISCAL_DAY_OF_MONTH AS TRANSACTION_DAY_OF_MONTH
    ,CAL.FISCAL_YEAR||LPAD(CAL.FISCAL_WEEK_OF_YEAR,2,0) AS TRANSACTION_WEEK_OF_YEAR
-- Customer Hierarchy
    ,CUST.CUSTOMER_NAME
    ,PCUST.CUSTOMER_NAME AS PARENT_CUSTOMER_NAME
    ,CA.ACCOUNT_TYPE_NAME
    ,CASE
        WHEN TRIM(UPPER(CA.ACCOUNT_TYPE_NAME)) LIKE 'NATIONAL%' THEN 'NATIONAL'
        ELSE 'LOCAL'
    END AS ACCOUNT_GROUP
-- Location Dimensions
    ,STR.STORE_NUMBER::VARCHAR AS STORE_NUMBER
    ,STR.STORE_NAME
    ,STR.STORE_NUMBER||'-'||STR.STORE_NAME AS STORE_NUM_NAME
    ,STR.CITY
    ,STR.STATE
    ,DC.DISTRIBUTION_CENTER_ID::VARCHAR AS REGION
-- Form Type
    ,FT.FORM_TYPE_CODE
    ,FT.FORM_TYPE_NAME
-- Sales Rep
    ,SR.SALES_REP_NUMBER::VARCHAR AS SALES_REP_NUMBER
    ,SR.SALES_REP_NAME
	,SR.SALES_REP_NUMBER||'-'||SR.SALES_REP_NAME AS SALES_REP_NUM_NAME
-- Product Hierarchy
    ,CAT.CATEGORY_ID::VARCHAR AS CATEGORY_CODE
    ,CAT.CATEGORY_NAME
    ,CAT.CATEGORY_ID||'-'||CAT.CATEGORY_NAME AS CATEGORY_CODE_NAME
    ,CATG.GROUP_ID::VARCHAR AS GROUP_ID
    ,CATGN.GROUP_NAME AS CATEGORY_GROUP_NAME
    ,CATG.GROUP_ID||'-'||CATGN.GROUP_NAME AS CATEGORY_GROUP_ID_NAME
    ,CLS.CLASS_ID::VARCHAR AS CLASS_ID
    ,CLS.CLASS_NAME
    ,CLS.CLASS_ID||'-'||CLS.CLASS_NAME AS CLASS_ID_NAME
-- Vendor
    ,VND.VENDOR_NUMBER
    ,VND.VENDOR_NAME
--TOTAL SALES--
    ,SUM(WOI.QUANTITY) AS DAILY_TOTAL_QUANTITY
    ,SUM(WOI.EXTENDED_COST) AS DAILY_TOTAL_COST
    ,SUM(WOI.EXTENDED_AMT) AS DAILY_TOTAL_SALE
    ,SUM(WOI.GP_AMT) AS DAILY_TOTAL_GROSS_PROFIT
    ,CASE
        WHEN DAILY_TOTAL_SALE = 0 THEN 0.00
        ELSE ((DAILY_TOTAL_GROSS_PROFIT/NULLIF(DAILY_TOTAL_SALE,0))*100)::NUMBER(18,2)
     END AS DAILY_GROSS_PROFIT_PCT --%
--FEE SALES--
    ,SUM(CASE WHEN FEE.CHARGES_TYPE IN ('COMMERCIAL CHARGES','OTR CHARGES') THEN WOI.QUANTITY ELSE 0.00 END) AS DAILY_TOTAL_FEE_QUANTITY
    ,SUM(CASE WHEN FEE.CHARGES_TYPE IN ('COMMERCIAL CHARGES','OTR CHARGES') THEN WOI.EXTENDED_COST ELSE 0.00 END) AS DAILY_TOTAL_FEE_COST
    ,SUM(CASE WHEN FEE.CHARGES_TYPE IN ('COMMERCIAL CHARGES','OTR CHARGES') THEN WOI.EXTENDED_AMT ELSE 0.00 END) AS DAILY_TOTAL_FEE_SALE
    ,SUM(CASE WHEN FEE.CHARGES_TYPE IN ('COMMERCIAL CHARGES','OTR CHARGES') THEN WOI.GP_AMT ELSE 0.00 END) AS DAILY_TOTAL_FEE_GROSS_PROFIT
    ,CASE
        WHEN DAILY_TOTAL_FEE_SALE = 0 THEN 0.00
        ELSE ((DAILY_TOTAL_FEE_GROSS_PROFIT/NULLIF(DAILY_TOTAL_FEE_SALE,0))*100)::NUMBER(18,2)
     END AS DAILY_FEE_GROSS_PROFIT_PCT
--CATEGORY 88 SALES--
    ,SUM(CASE WHEN CAT.CATEGORY_ID =88 THEN WOI.QUANTITY ELSE 0.00 END) AS DAILY_TOTAL_CAT88_QUANTITY
    ,SUM(CASE WHEN CAT.CATEGORY_ID =88 THEN WOI.EXTENDED_COST ELSE 0.00 END) AS DAILY_TOTAL_CAT88_COST
    ,SUM(CASE WHEN CAT.CATEGORY_ID =88 THEN WOI.EXTENDED_AMT ELSE 0.00 END) AS DAILY_TOTAL_CAT88_SALE
    ,SUM(CASE WHEN CAT.CATEGORY_ID =88 THEN WOI.GP_AMT ELSE 0.00 END) AS DAILY_TOTAL_CAT88_GROSS_PROFIT
    ,CASE
        WHEN DAILY_TOTAL_CAT88_SALE = 0 THEN 0.00
        ELSE ((DAILY_TOTAL_CAT88_GROSS_PROFIT/NULLIF(DAILY_TOTAL_CAT88_SALE,0))*100)::NUMBER(18,2)
     END AS DAILY_CAT88_GROSS_PROFIT_PCT
--FROM PART---
FROM
--Fetching only active open and invoiced orders from header table--1,554,204--3,890,238--1.6M
    ANALYTICS.SILVER_SALES.T_FCT_WORK_ORDER_HEADER AS WOH
--FISCAL CALENDAR
JOIN ANALYTICS.SILVER_SALES.T_DIM_DATE CAL
    ON WOH.TRANSACTION_DATE_SK = CAL.DATE_KEY
    AND WOH.IS_CURRENT_FLAG = TRUE
    AND UPPER(TRIM(WOH.WORK_ORDER_STATUS)) IN ('', 'I')
    -- Filter for past 2 years from current date
    AND CAL.FISCAL_DATE >= DATEADD('YEAR', -2, CURRENT_DATE())
--Work order item details table
JOIN ANALYTICS.SILVER_SALES.T_FCT_WORK_ORDER_ITEM_DETAILS AS WOI
	ON  WOI.IS_CURRENT_FLAG = TRUE
	AND WOH.STORE_NUMBER = WOI.STORE_NUMBER
	AND WOH.FORM_TYPE_CODE = WOI.FORM_TYPE_CODE
	AND WOH.POS_PREFIX = WOI.POS_PREFIX
	AND WOH.WORK_ORDER_NUMBER = WOI.WORK_ORDER_NUMBER
--CUSTOMER
LEFT JOIN ANALYTICS.SILVER_SALES.T_DIM_CUSTOMER CUST
	ON WOH.CUSTOMER_SK = CUST.CUSTOMER_SK
LEFT JOIN ANALYTICS.SILVER_SALES.T_DIM_CUSTOMER PCUST
	ON CUST.PARENT_CUSTOMER_ID = PCUST.CUSTOMER_ID
	AND PCUST.IS_CURRENT_FLAG = TRUE
--CUSTOMER ACCOUNT
LEFT JOIN ANALYTICS.SILVER_SALES.T_DIM_CUSTOMER_ACCOUNT CA--TYPE-1
    ON CUST.ACCOUNT_TYPE = CA.ACCOUNT_TYPE

--STORE
LEFT JOIN ANALYTICS.SILVER_SALES.T_DIM_STORE STR
	ON WOH.STORE_NUMBER = STR.STORE_NUMBER
    AND STR.IS_CURRENT_FLAG = TRUE
---DISTRIBUTION CENTER
LEFT JOIN ANALYTICS.SILVER_SALES.T_DIM_DISTRIBUTION_CENTER DC --TYPE-1
    ON WOH.STORE_NUMBER = DC.STORE_ID
--FORM TYPE
LEFT JOIN ANALYTICS.SILVER_SALES.T_DIM_FORM_TYPE FT
	ON WOH.FORM_TYPE_CODE = FT.FORM_TYPE_CODE
    AND FT.IS_CURRENT_FLAG = TRUE
--SALES REP
LEFT JOIN ANALYTICS.SILVER_SALES.T_DIM_SALES_REP SR
	ON WOH.SALES_REP_SK = SR.SALES_REP_SK
--ITEM
LEFT JOIN ANALYTICS.SILVER_SALES.T_DIM_PRODUCT ITM
	ON WOI.PRODUCT_SK = ITM.PRODUCT_SK
--CATAGORY
LEFT JOIN ANALYTICS.SILVER_SALES.T_DIM_INVENTORY_CATEGORY CAT
	ON ITM.INVENTORY_CATEGORY_SK = CAT.INVENTORY_CATEGORY_SK
--CATAGORY GROUP
LEFT JOIN ANALYTICS.SILVER_SALES.T_DIM_CATEGORY_GROUP CATG
	ON CAT.CATEGORY_ID = CATG.CATEGORY_ID
--CATAGORY GROUP NAME
LEFT JOIN ANALYTICS.SILVER_SALES.T_DIM_CATEGORY_GROUP_NAME CATGN
	ON CATG.GROUP_ID = CATGN.GROUP_ID
--CLASS
LEFT JOIN ANALYTICS.SILVER_SALES.T_DIM_INVENTORY_CLASS CLS
	ON ITM.INVENTORY_CLASS_SK = CLS.INVENTORY_CLASS_SK
--VENDOR--
LEFT JOIN ANALYTICS.SILVER_SALES.T_DIM_INVENTORY_VENDOR VND
    ON ITM.INVENTORY_VENDOR_SK = VND.INVENTORY_VENDOR_SK
--Item fee charges--
LEFT JOIN ANALYTICS.SILVER_SALES.T_DIM_FEE_ITEMS FEE
    ON ITM.ITEM_NUMBER = FEE.ITEM_NUMBER
--GROUPING DIMENSIONS
GROUP BY 	 WORK_ORDER_STATUS
    ,CAL.FISCAL_DATE
    ,CAL.FISCAL_YEAR
    ,CAL.FISCAL_MONTH
    ,CAL.FISCAL_MONTH_NAME
    ,CAL.FISCAL_QUARTER
    ,CAL.FISCAL_DAY_OF_MONTH
    ,CAL.FISCAL_WEEK_OF_YEAR
    ,CUST.CUSTOMER_NAME
    ,PCUST.CUSTOMER_NAME
    ,CA.ACCOUNT_TYPE_NAME
    ,STR.STORE_NUMBER
    ,STR.STORE_NAME
    ,STR.CITY
    ,STR.STATE
    ,DC.DISTRIBUTION_CENTER_ID
    ,FT.FORM_TYPE_CODE
    ,FT.FORM_TYPE_NAME
    ,SR.SALES_REP_NUMBER
    ,SR.SALES_REP_NAME
    ,CAT.CATEGORY_ID
    ,CAT.CATEGORY_NAME
    ,CATG.GROUP_ID
    ,CATGN.GROUP_NAME
    ,CLS.CLASS_ID
    ,CLS.CLASS_NAME
    ,VND.VENDOR_NUMBER
    ,VND.VENDOR_NAME;
	
----------------------------------------------------------------------------

--V_SMM_ITEM_DAILY_FEE_CAT88_INCVA_SALE

create or replace view REPORTING.GOLD_SALES.V_SMM_ITEM_DAILY_FEE_CAT88_INCVA_SALE as
SELECT
	 CAL.FISCAL_DATE AS TRANSACTION_DT
    ,CAL.FISCAL_YEAR AS TRANSACTION_YEAR
    ,CAL.FISCAL_MONTH AS TRANSACTION_MONTH --NUM
    ,CAL.FISCAL_YEAR||'-'||LPAD(CAL.FISCAL_MONTH,2,0) AS TRANSACTION_YEAR_MONTH
    ,LPAD(CAL.FISCAL_MONTH,2,0)||' '||CAL.FISCAL_MONTH_NAME AS TRANSACTION_MONTH_NAME
    ,CAL.FISCAL_QUARTER AS TRANSACTION_QUARTER
    ,'DAY-'||CAL.FISCAL_DAY_OF_MONTH AS TRANSACTION_DAY_OF_MONTH
    ,CAL.FISCAL_YEAR||LPAD(CAL.FISCAL_WEEK_OF_YEAR,2,0) AS TRANSACTION_WEEK_OF_YEAR
    ,WOH.FORM_TYPE_CODE
    ,WOH.POS_PREFIX
    ,WOH.WORK_ORDER_NUMBER::VARCHAR AS WORK_ORDER_NUMBER
	,WOH.STORE_NUMBER::VARCHAR AS STORE_NUMBER
	,STR.STORE_NAME
    ,WOH.STORE_NUMBER||'-'||STR.STORE_NAME AS STORE_NUM_NAME
    ,STR.CITY AS STORE_CITY
    ,STR.STATE AS STORE_STATE
	,DC.DISTRIBUTION_CENTER_ID::VARCHAR AS REGION
	,SR.SALES_REP_NUMBER::VARCHAR SALES_REP_NUMBER
	,SR.SALES_REP_NAME
	,SR.SALES_REP_NUMBER||'-'||SR.SALES_REP_NAME AS SALES_REP_NUM_NAME
	,MGR.MANAGER_NAME AS STORE_MANAGER_NAME
    ,MGR.AREA_DIRECTOR_MANAGER_NUMBER::VARCHAR AS AREA_MANAGER_NUMBER
    ,AMGR.SALES_REP_NAME AS AREA_MANAGER_NAME
    ,MGR.AREA_DIRECTOR_MANAGER_NUMBER||'-'||AMGR.SALES_REP_NAME AS AREA_MANAGER_NUM_NAME
    ,MGR.REGIONAL_SALES_MANAGER_NUMBER::VARCHAR AS REGIONAL_MANAGER_NUMBER
    ,RMGR.SALES_REP_NAME AS REGIONAL_MANAGER_NAME
    ,MGR.REGIONAL_SALES_MANAGER_NUMBER||'-'||RMGR.SALES_REP_NAME AS REGIONAL_MANAGER_NUM_NAME
    ,CUST.CUSTOMER_ID::VARCHAR AS CUSTOMER_ID
    ,CUST.CUSTOMER_NAME
    ,PCUST.CUSTOMER_NAME AS PARENT_CUSTOMER_NAME
    ,CA.ACCOUNT_TYPE_NAME
---Account Type---
	,CASE
        WHEN TRIM(UPPER(CA.ACCOUNT_TYPE_NAME)) LIKE 'NATIONAL%' THEN 'NATIONAL'
        ELSE 'LOCAL'
    END AS ACCOUNT_GROUP
    ,CAT.CATEGORY_ID::VARCHAR AS CATEGORY_CODE
    ,CAT.CATEGORY_NAME
    ,CAT.CATEGORY_ID||'-'||CAT.CATEGORY_NAME AS CATEGORY_CODE_NAME
    ,CATG.GROUP_ID
    ,CATGN.GROUP_NAME AS CATEGORY_GROUP_NAME
    ,CATG.GROUP_ID||'-'||CATGN.GROUP_NAME AS CATEGORY_GROUP_ID_NAME
    ,CLS.CLASS_ID::VARCHAR AS CLASS_ID
    ,CLS.CLASS_NAME
    ,CLS.CLASS_ID||'-'||CLS.CLASS_NAME AS CLASS_ID_NAME
	,ITM.ITEM_NUMBER::VARCHAR AS ITEM_NUMBER
	,ITM.SIZE
	,ITM.ITEM_DESCRIPTION
--Flags--
    ,FEE.CHARGES_TYPE AS FEE_CHARGES_TYPE_FALG
    ,CASE
        WHEN CAT.CATEGORY_ID IN (3, 10, 11, 12, 13, 14, 15, 16, 71) THEN 'NCVA'
        WHEN CAT.CATEGORY_ID = 88 THEN 'CAT88'
     END AS CAT88_NCVA_FLAG
-- Sales metrics
    ,SUM(WOI.EXTENDED_AMT) AS DAILY_SALES
    ,SUM(WOI.GP_AMT) AS GROSS_PROFIT
    ,SUM(WOI.QUANTITY) AS QUANTITY
    ,SUM(WOI.EXTENDED_COST) AS COST
-- GP %------------
    ,CASE
        WHEN DAILY_SALES = 0 THEN 0.00
        ELSE ((GROSS_PROFIT/NULLIF(DAILY_SALES,0))*100)::NUMBER(18,2)
     END AS GP_PERCENT
FROM
--Work Order Header
    ANALYTICS.SILVER_SALES.T_FCT_WORK_ORDER_HEADER AS WOH
--FISCAL CALENDAR
JOIN ANALYTICS.SILVER_SALES.T_DIM_DATE CAL
    ON WOH.TRANSACTION_DATE_SK = CAL.DATE_KEY
    AND WOH.IS_CURRENT_FLAG = TRUE
    AND UPPER(TRIM(WOH.WORK_ORDER_STATUS)) IN ('', 'I')
    -- Filter for past 1 year from current date
    AND CAL.FISCAL_DATE >= DATE_TRUNC('MONTH', DATEADD('YEAR', -1, CURRENT_DATE()))
--Work order item details table
JOIN ANALYTICS.SILVER_SALES.T_FCT_WORK_ORDER_ITEM_DETAILS AS WOI
	ON  WOI.IS_CURRENT_FLAG = TRUE
	AND WOH.STORE_NUMBER = WOI.STORE_NUMBER
	AND WOH.FORM_TYPE_CODE = WOI.FORM_TYPE_CODE
	AND WOH.POS_PREFIX = WOI.POS_PREFIX
	AND WOH.WORK_ORDER_NUMBER = WOI.WORK_ORDER_NUMBER
--CUSTOMER
LEFT JOIN ANALYTICS.SILVER_SALES.T_DIM_CUSTOMER CUST --TYPE-2
	ON WOH.CUSTOMER_SK = CUST.CUSTOMER_SK
LEFT JOIN ANALYTICS.SILVER_SALES.T_DIM_CUSTOMER PCUST --TYPE-2
	ON CUST.PARENT_CUSTOMER_ID = PCUST.CUSTOMER_ID
	AND PCUST.IS_CURRENT_FLAG = TRUE
--CUSTOMER ACCOUNT
LEFT JOIN ANALYTICS.SILVER_SALES.T_DIM_CUSTOMER_ACCOUNT CA--TYPE-2
    ON CUST.ACCOUNT_TYPE = CA.ACCOUNT_TYPE
--STORE
LEFT JOIN ANALYTICS.SILVER_SALES.T_DIM_STORE STR --TYPE-2
	ON WOH.STORE_NUMBER = STR.STORE_NUMBER
    AND STR.IS_CURRENT_FLAG = TRUE
---DISTRIBUTION CENTER
LEFT JOIN ANALYTICS.SILVER_SALES.T_DIM_DISTRIBUTION_CENTER DC --TYPE-1
    ON WOH.STORE_NUMBER = DC.STORE_ID
--FORM TYPE
LEFT JOIN ANALYTICS.SILVER_SALES.T_DIM_FORM_TYPE FT
	ON WOH.FORM_TYPE_CODE = FT.FORM_TYPE_CODE
    AND FT.IS_CURRENT_FLAG = TRUE
--SALES REP
LEFT JOIN ANALYTICS.SILVER_SALES.T_DIM_SALES_REP SR --TYPE-2
	ON WOH.SALES_REP_SK = SR.SALES_REP_SK
--Store Manager
LEFT JOIN ANALYTICS.SILVER_SALES.T_DIM_STORE_MANAGER MGR --TYPE-2
    ON WOH.STORE_NUMBER = MGR.STORE_NUMBER
    AND MGR.IS_CURRENT_FLAG = TRUE
--REGIONAL MANAGER NAME
LEFT JOIN ANALYTICS.SILVER_SALES.T_DIM_SALES_REP RMGR --TYPE-2
	ON MGR.REGIONAL_SALES_MANAGER_NUMBER = RMGR.SALES_REP_NUMBER
--AREA MANAGER NAME
LEFT JOIN ANALYTICS.SILVER_SALES.T_DIM_SALES_REP AMGR --TYPE-2
	ON MGR.AREA_DIRECTOR_MANAGER_NUMBER = AMGR.SALES_REP_NUMBER
--ITEM
LEFT JOIN ANALYTICS.SILVER_SALES.T_DIM_PRODUCT ITM
	ON WOI.PRODUCT_SK = ITM.PRODUCT_SK
--CATAGORY
LEFT JOIN ANALYTICS.SILVER_SALES.T_DIM_INVENTORY_CATEGORY CAT
	ON ITM.INVENTORY_CATEGORY_SK = CAT.INVENTORY_CATEGORY_SK
--CATAGORY GROUP
LEFT JOIN ANALYTICS.SILVER_SALES.T_DIM_CATEGORY_GROUP CATG
	ON CAT.CATEGORY_ID = CATG.CATEGORY_ID
--CATAGORY GROUP NAME
LEFT JOIN ANALYTICS.SILVER_SALES.T_DIM_CATEGORY_GROUP_NAME CATGN
	ON CATG.GROUP_ID = CATGN.GROUP_ID
--CLASS
LEFT JOIN ANALYTICS.SILVER_SALES.T_DIM_INVENTORY_CLASS CLS
	ON ITM.INVENTORY_CLASS_SK = CLS.INVENTORY_CLASS_SK
--Item fee charges--
LEFT JOIN ANALYTICS.SILVER_SALES.T_DIM_FEE_ITEMS FEE
    ON ITM.ITEM_NUMBER = FEE.ITEM_NUMBER
WHERE CAT.CATEGORY_ID IN (88, 3, 10, 11, 12, 13, 14, 15, 16, 71)
    OR FEE.ITEM_NUMBER IS NOT NULL
----Group BY
GROUP BY 
	 CAL.FISCAL_DATE
    ,CAL.FISCAL_YEAR
    ,CAL.FISCAL_MONTH
    ,CAL.FISCAL_MONTH_NAME
    ,CAL.FISCAL_QUARTER
    ,CAL.FISCAL_DAY_OF_MONTH
    ,CAL.FISCAL_WEEK_OF_YEAR
    ,WOH.FORM_TYPE_CODE
    ,WOH.POS_PREFIX
	,WOH.WORK_ORDER_NUMBER
	,WOH.STORE_NUMBER
	,STR.STORE_NAME
    ,STR.CITY
    ,STR.STATE
	,DC.DISTRIBUTION_CENTER_ID
	,SR.SALES_REP_NUMBER
	,SR.SALES_REP_NAME
	,MGR.MANAGER_NAME
    ,MGR.AREA_DIRECTOR_MANAGER_NUMBER
    ,AMGR.SALES_REP_NAME
    ,MGR.REGIONAL_SALES_MANAGER_NUMBER
    ,RMGR.SALES_REP_NAME
    ,CUST.CUSTOMER_ID
    ,CUST.CUSTOMER_NAME
    ,PCUST.CUSTOMER_NAME
    ,CA.ACCOUNT_TYPE_NAME
    ,CAT.CATEGORY_ID
    ,CAT.CATEGORY_NAME
    ,CATG.GROUP_ID
    ,CATGN.GROUP_NAME
    ,CLS.CLASS_ID
    ,CLS.CLASS_NAME
	,ITM.ITEM_NUMBER
	,ITM.SIZE
	,ITM.ITEM_DESCRIPTION
    ,FEE.CHARGES_TYPE
;


----------------------------------------------------------------------------

--V_SMM_ITEM_DAILY_SALE

create or replace view REPORTING.GOLD_SALES.V_SMM_ITEM_DAILY_SALE as
SELECT
	 CAL.FISCAL_DATE AS TRANSACTION_DT
    ,CAL.FISCAL_YEAR AS TRANSACTION_YEAR
    ,CAL.FISCAL_MONTH AS TRANSACTION_MONTH --NUM
    ,CAL.FISCAL_YEAR||'-'||LPAD(CAL.FISCAL_MONTH,2,0) AS TRANSACTION_YEAR_MONTH
    ,LPAD(CAL.FISCAL_MONTH,2,0)||' '||CAL.FISCAL_MONTH_NAME AS TRANSACTION_MONTH_NAME
    ,CAL.FISCAL_QUARTER AS TRANSACTION_QUARTER
    ,'DAY-'||CAL.FISCAL_DAY_OF_MONTH AS TRANSACTION_DAY_OF_MONTH
    ,CAL.FISCAL_YEAR||LPAD(CAL.FISCAL_WEEK_OF_YEAR,2,0) AS TRANSACTION_WEEK_OF_YEAR
    ,WOH.FORM_TYPE_CODE
    ,WOH.POS_PREFIX
    ,WOH.WORK_ORDER_NUMBER::VARCHAR AS WORK_ORDER_NUMBER
	,WOH.STORE_NUMBER::VARCHAR AS STORE_NUMBER
	,STR.STORE_NAME
    ,WOH.STORE_NUMBER||'-'||STR.STORE_NAME AS STORE_NUM_NAME
    ,STR.CITY AS STORE_CITY
    ,STR.STATE AS STORE_STATE
	,DC.DISTRIBUTION_CENTER_ID::VARCHAR AS REGION
	,SR.SALES_REP_NUMBER::VARCHAR SALES_REP_NUMBER
	,SR.SALES_REP_NAME
	,SR.SALES_REP_NUMBER||'-'||SR.SALES_REP_NAME AS SALES_REP_NUM_NAME
	,MGR.MANAGER_NAME AS STORE_MANAGER_NAME
    ,MGR.AREA_DIRECTOR_MANAGER_NUMBER::VARCHAR AS AREA_MANAGER_NUMBER
    ,AMGR.SALES_REP_NAME AS AREA_MANAGER_NAME
    ,MGR.AREA_DIRECTOR_MANAGER_NUMBER||'-'||AMGR.SALES_REP_NAME AS AREA_MANAGER_NUM_NAME
    ,MGR.REGIONAL_SALES_MANAGER_NUMBER::VARCHAR AS REGIONAL_MANAGER_NUMBER
    ,RMGR.SALES_REP_NAME AS REGIONAL_MANAGER_NAME
    ,MGR.REGIONAL_SALES_MANAGER_NUMBER||'-'||RMGR.SALES_REP_NAME AS REGIONAL_MANAGER_NUM_NAME
    ,CUST.CUSTOMER_ID::VARCHAR AS CUSTOMER_ID
    ,CUST.CUSTOMER_NAME
    ,PCUST.CUSTOMER_NAME AS PARENT_CUSTOMER_NAME
    ,CA.ACCOUNT_TYPE_NAME
---Account Type---
	,CASE
        WHEN TRIM(UPPER(CA.ACCOUNT_TYPE_NAME)) LIKE 'NATIONAL%' THEN 'NATIONAL'
        ELSE 'LOCAL'
    END AS ACCOUNT_GROUP
    ,CAT.CATEGORY_ID::VARCHAR AS CATEGORY_CODE
    ,CAT.CATEGORY_NAME
    ,CAT.CATEGORY_ID||'-'||CAT.CATEGORY_NAME AS CATEGORY_CODE_NAME
    ,CATG.GROUP_ID
    ,CATGN.GROUP_NAME AS CATEGORY_GROUP_NAME
    ,CATG.GROUP_ID||'-'||CATGN.GROUP_NAME AS CATEGORY_GROUP_ID_NAME
    ,CLS.CLASS_ID::VARCHAR AS CLASS_ID
    ,CLS.CLASS_NAME
    ,CLS.CLASS_ID||'-'||CLS.CLASS_NAME AS CLASS_ID_NAME
	,ITM.ITEM_NUMBER::VARCHAR AS ITEM_NUMBER
	,ITM.SIZE
	,ITM.ITEM_DESCRIPTION
-- Sales metrics
    ,SUM(WOI.EXTENDED_AMT) AS DAILY_SALES
    ,SUM(WOI.GP_AMT) AS GROSS_PROFIT
    ,SUM(WOI.QUANTITY) AS QUANTITY
    ,SUM(WOI.EXTENDED_COST) AS COST
-- GP %------------
    ,CASE
        WHEN DAILY_SALES = 0 THEN 0.00
        ELSE ((GROSS_PROFIT/NULLIF(DAILY_SALES,0))*100)::NUMBER(18,2)
     END AS GP_PERCENT
FROM
--Work Order Header
    ANALYTICS.SILVER_SALES.T_FCT_WORK_ORDER_HEADER AS WOH
--FISCAL CALENDAR
JOIN ANALYTICS.SILVER_SALES.T_DIM_DATE CAL
    ON WOH.TRANSACTION_DATE_SK = CAL.DATE_KEY
    AND WOH.IS_CURRENT_FLAG = TRUE
    AND UPPER(TRIM(WOH.WORK_ORDER_STATUS)) IN ('', 'I')
    -- Filter for past 1 year from current date
    AND CAL.FISCAL_DATE >= DATE_TRUNC('MONTH', DATEADD('YEAR', -1, CURRENT_DATE()))
--Work order item details table
JOIN ANALYTICS.SILVER_SALES.T_FCT_WORK_ORDER_ITEM_DETAILS AS WOI
	ON  WOI.IS_CURRENT_FLAG = TRUE
	AND WOH.STORE_NUMBER = WOI.STORE_NUMBER
	AND WOH.FORM_TYPE_CODE = WOI.FORM_TYPE_CODE
	AND WOH.POS_PREFIX = WOI.POS_PREFIX
	AND WOH.WORK_ORDER_NUMBER = WOI.WORK_ORDER_NUMBER
--CUSTOMER
LEFT JOIN ANALYTICS.SILVER_SALES.T_DIM_CUSTOMER CUST --TYPE-2
	ON WOH.CUSTOMER_SK = CUST.CUSTOMER_SK
LEFT JOIN ANALYTICS.SILVER_SALES.T_DIM_CUSTOMER PCUST --TYPE-2
	ON CUST.PARENT_CUSTOMER_ID = PCUST.CUSTOMER_ID
	AND PCUST.IS_CURRENT_FLAG = TRUE
--CUSTOMER ACCOUNT
LEFT JOIN ANALYTICS.SILVER_SALES.T_DIM_CUSTOMER_ACCOUNT CA--TYPE-2
    ON CUST.ACCOUNT_TYPE = CA.ACCOUNT_TYPE
--STORE
LEFT JOIN ANALYTICS.SILVER_SALES.T_DIM_STORE STR --TYPE-2
	ON WOH.STORE_NUMBER = STR.STORE_NUMBER
    AND STR.IS_CURRENT_FLAG = TRUE
---DISTRIBUTION CENTER
LEFT JOIN ANALYTICS.SILVER_SALES.T_DIM_DISTRIBUTION_CENTER DC --TYPE-1
    ON WOH.STORE_NUMBER = DC.STORE_ID
--FORM TYPE
LEFT JOIN ANALYTICS.SILVER_SALES.T_DIM_FORM_TYPE FT
	ON WOH.FORM_TYPE_CODE = FT.FORM_TYPE_CODE
    AND FT.IS_CURRENT_FLAG = TRUE
--SALES REP
LEFT JOIN ANALYTICS.SILVER_SALES.T_DIM_SALES_REP SR --TYPE-2
	ON WOH.SALES_REP_SK = SR.SALES_REP_SK
--Store Manager
LEFT JOIN ANALYTICS.SILVER_SALES.T_DIM_STORE_MANAGER MGR --TYPE-2
    ON WOH.STORE_NUMBER = MGR.STORE_NUMBER
    AND MGR.IS_CURRENT_FLAG = TRUE
--REGIONAL MANAGER NAME
LEFT JOIN ANALYTICS.SILVER_SALES.T_DIM_SALES_REP RMGR --TYPE-2
	ON MGR.REGIONAL_SALES_MANAGER_NUMBER = RMGR.SALES_REP_NUMBER
--AREA MANAGER NAME
LEFT JOIN ANALYTICS.SILVER_SALES.T_DIM_SALES_REP AMGR --TYPE-2
	ON MGR.AREA_DIRECTOR_MANAGER_NUMBER = AMGR.SALES_REP_NUMBER
--ITEM
LEFT JOIN ANALYTICS.SILVER_SALES.T_DIM_PRODUCT ITM
	ON WOI.PRODUCT_SK = ITM.PRODUCT_SK
--CATAGORY
LEFT JOIN ANALYTICS.SILVER_SALES.T_DIM_INVENTORY_CATEGORY CAT
	ON ITM.INVENTORY_CATEGORY_SK = CAT.INVENTORY_CATEGORY_SK
--CATAGORY GROUP
LEFT JOIN ANALYTICS.SILVER_SALES.T_DIM_CATEGORY_GROUP CATG
	ON CAT.CATEGORY_ID = CATG.CATEGORY_ID
--CATAGORY GROUP NAME
LEFT JOIN ANALYTICS.SILVER_SALES.T_DIM_CATEGORY_GROUP_NAME CATGN
	ON CATG.GROUP_ID = CATGN.GROUP_ID
--CLASS
LEFT JOIN ANALYTICS.SILVER_SALES.T_DIM_INVENTORY_CLASS CLS
	ON ITM.INVENTORY_CLASS_SK = CLS.INVENTORY_CLASS_SK

----Group BY
GROUP BY 
	 CAL.FISCAL_DATE
    ,CAL.FISCAL_YEAR
    ,CAL.FISCAL_MONTH
    ,CAL.FISCAL_MONTH_NAME
    ,CAL.FISCAL_QUARTER
    ,CAL.FISCAL_DAY_OF_MONTH
    ,CAL.FISCAL_WEEK_OF_YEAR
    ,WOH.FORM_TYPE_CODE
    ,WOH.POS_PREFIX
	,WOH.WORK_ORDER_NUMBER
	,WOH.STORE_NUMBER
	,STR.STORE_NAME
    ,STR.CITY
    ,STR.STATE
	,DC.DISTRIBUTION_CENTER_ID
	,SR.SALES_REP_NUMBER
	,SR.SALES_REP_NAME
	,MGR.MANAGER_NAME
    ,MGR.AREA_DIRECTOR_MANAGER_NUMBER
    ,AMGR.SALES_REP_NAME
    ,MGR.REGIONAL_SALES_MANAGER_NUMBER
    ,RMGR.SALES_REP_NAME
    ,CUST.CUSTOMER_ID
    ,CUST.CUSTOMER_NAME
    ,PCUST.CUSTOMER_NAME
    ,CA.ACCOUNT_TYPE_NAME
    ,CAT.CATEGORY_ID
    ,CAT.CATEGORY_NAME
    ,CATG.GROUP_ID
    ,CATGN.GROUP_NAME
    ,CLS.CLASS_ID
    ,CLS.CLASS_NAME
	,ITM.ITEM_NUMBER
	,ITM.SIZE
	,ITM.ITEM_DESCRIPTION
;

----------------------------------------------------------------------------

--V_SMM_MONTHLY_BRAND_SALES

create or replace view REPORTING.GOLD_SALES.V_SMM_MONTHLY_BRAND_SALES as
SELECT
-- Date Dimensions
     CAL.FISCAL_YEAR AS TRANSACTION_YEAR
    ,CAL.FISCAL_MONTH AS TRANSACTION_MONTH --num
    ,CAL.FISCAL_YEAR||'-'||LPAD(CAL.FISCAL_MONTH,2,0) AS TRANSACTION_YEAR_MONTH
    ,LPAD(CAL.FISCAL_MONTH,2,0)||' '||CAL.FISCAL_MONTH_NAME AS TRANSACTION_MONTH_NAME

--BRAND Sales Quantity--
    ,BRND.BRAND_NAME
    ,SUM(WOI.QUANTITY) MONTHLY_BRAND_QTY
    ,SUM(WOI.EXTENDED_COST) MONTHLY_BRAND_COST
    ,SUM(WOI.EXTENDED_AMT) MONTHLY_BRAND_SALES
    ,SUM(WOI.GP_AMT) MONTHLY_BRAND_GP
    ,CASE
        WHEN MONTHLY_BRAND_SALES = 0.00 THEN 0.00
        ELSE ((MONTHLY_BRAND_GP/MONTHLY_BRAND_SALES)*100)::NUMBER(18,2)
     END AS MONTHLY_BRAND_GP_PCT

--FROM PART---
FROM
--Fetching only active open and invoiced orders from header table--1,554,204--3,890,238--1.6M
    ANALYTICS.SILVER_SALES.T_FCT_WORK_ORDER_HEADER AS WOH
--FISCAL CALENDAR
JOIN ANALYTICS.SILVER_SALES.T_DIM_DATE CAL
    ON WOH.TRANSACTION_DATE_SK = CAL.DATE_KEY
    AND WOH.IS_CURRENT_FLAG = TRUE
    AND UPPER(TRIM(WOH.WORK_ORDER_STATUS)) IN ('', 'I')
-- Filter for past 5 years from current month
        AND DATE_TRUNC('MONTH', CAL.FISCAL_DATE) >= DATE_TRUNC('MONTH', DATEADD('YEAR', -5, CURRENT_DATE()))

--Work order item details table
JOIN ANALYTICS.SILVER_SALES.T_FCT_WORK_ORDER_ITEM_DETAILS AS WOI
	ON  WOI.IS_CURRENT_FLAG = TRUE
	AND WOH.STORE_NUMBER = WOI.STORE_NUMBER
	AND WOH.FORM_TYPE_CODE = WOI.FORM_TYPE_CODE
	AND WOH.POS_PREFIX = WOI.POS_PREFIX
	AND WOH.WORK_ORDER_NUMBER = WOI.WORK_ORDER_NUMBER

--ITEM
LEFT JOIN ANALYTICS.SILVER_SALES.T_DIM_PRODUCT ITM
	ON WOI.PRODUCT_SK = ITM.PRODUCT_SK

---Brand Name
LEFT JOIN ANALYTICS.SILVER_SALES.T_DIM_ITEM_ADD_ON IAO
    ON ITM.ITEM_NUMBER = IAO.ITEM_NUMBER
LEFT JOIN ANALYTICS.SILVER_SALES.T_DIM_BRAND BRND
    ON IAO.BRAND_CODE = BRND.BRAND_ID

--GROUPING DIMENSIONS
GROUP BY
     CAL.FISCAL_YEAR
    ,CAL.FISCAL_MONTH
    ,CAL.FISCAL_MONTH_NAME
    ,BRND.BRAND_NAME
ORDER BY CAL.FISCAL_YEAR, CAL.FISCAL_MONTH, BRND.BRAND_NAME;


----------------------------------------------------------------------------

--V_SMM_MONTHLY_BRAND_SALES_PIVOT

create or replace view REPORTING.GOLD_SALES.V_SMM_MONTHLY_BRAND_SALES_PIVOT as
SELECT *
FROM (
  SELECT
    TRANSACTION_YEAR,
    BRAND_NAME,
    TRANSACTION_MONTH_NAME,
    MONTHLY_BRAND_SALES
  FROM REPORTING.GOLD_SALES.V_SMM_MONTHLY_BRAND_SALES
)
PIVOT (
  SUM(MONTHLY_BRAND_SALES) FOR TRANSACTION_MONTH_NAME IN (
    '01 Jan',
    '02 Feb',
    '03 Mar',
    '04 Apr',
    '05 May',
    '06 Jun',
    '07 Jul',
    '08 Aug',
    '09 Sep',
    '10 Oct',
    '11 Nov',
    '12 Dec'
  )
) AS P (TRANSACTION_YEAR, BRAND_NAME, 
"01 Jan",
"02 Feb",
"03 Mar",
"04 Apr",
"05 May",
"06 Jun",
"07 Jul",
"08 Aug",
"09 Sep",
"10 Oct",
"11 Nov",
"12 Dec")
ORDER BY 
  TRANSACTION_YEAR,
  BRAND_NAME;
  
----------------------------------------------------------------------------

--V_SMM_MONTHLY_SALES

create or replace view REPORTING.GOLD_SALES.V_SMM_MONTHLY_SALES as
SELECT
-- Work Order Status
    CASE    WHEN TRIM(WOH.WORK_ORDER_STATUS) = '' THEN 'Open'
            WHEN TRIM(WOH.WORK_ORDER_STATUS) = 'I' THEN 'Invoiced'
            ELSE 'Other-Not-Recognized'
    END AS WORK_ORDER_STATUS
-- Date Dimensions
    ,CAL.FISCAL_YEAR AS TRANSACTION_YEAR
    ,CAL.FISCAL_MONTH AS TRANSACTION_MONTH --num
    ,CAL.FISCAL_YEAR||'-'||LPAD(CAL.FISCAL_MONTH,2,0) AS TRANSACTION_YEAR_MONTH
    ,LPAD(CAL.FISCAL_MONTH,2,0)||' '||CAL.FISCAL_MONTH_NAME AS TRANSACTION_MONTH_NAME
    ,CAL.FISCAL_QUARTER AS TRANSACTION_QUARTER
-- Customer Hierarchy
    ,CUST.CUSTOMER_NAME
    ,PCUST.CUSTOMER_NAME AS PARENT_CUSTOMER_NAME
    ,CA.ACCOUNT_TYPE_NAME
    ,CASE
        WHEN TRIM(UPPER(CA.ACCOUNT_TYPE_NAME)) LIKE 'NATIONAL%' THEN 'NATIONAL'
        ELSE 'LOCAL'
    END AS ACCOUNT_GROUP
-- Location Dimensions
    ,STR.STORE_NUMBER::VARCHAR AS STORE_NUMBER
    ,STR.STORE_NAME
    ,STR.STORE_NUMBER||'-'||STR.STORE_NAME AS STORE_NUM_NAME
    ,STR.CITY
    ,STR.STATE
    ,DC.DISTRIBUTION_CENTER_ID::VARCHAR AS REGION
-- Form Type
    ,FT.FORM_TYPE_CODE
    ,FT.FORM_TYPE_NAME
-- Sales Rep
    ,SR.SALES_REP_NUMBER::VARCHAR AS SALES_REP_NUMBER
    ,SR.SALES_REP_NAME
	,SR.SALES_REP_NUMBER||'-'||SR.SALES_REP_NAME AS SALES_REP_NUM_NAME
-- Product Hierarchy
    ,CAT.CATEGORY_ID::VARCHAR AS CATEGORY_CODE
    ,CAT.CATEGORY_NAME
    ,CAT.CATEGORY_ID||'-'||CAT.CATEGORY_NAME AS CATEGORY_CODE_NAME
    ,CATG.GROUP_ID::VARCHAR AS GROUP_ID
    ,CATGN.GROUP_NAME AS CATEGORY_GROUP_NAME
    ,CATG.GROUP_ID||'-'||CATGN.GROUP_NAME AS CATEGORY_GROUP_ID_NAME
    ,CLS.CLASS_ID::VARCHAR AS CLASS_ID
    ,CLS.CLASS_NAME
    ,CLS.CLASS_ID||'-'||CLS.CLASS_NAME AS CLASS_ID_NAME
-- Vendor
    ,VND.VENDOR_NUMBER
    ,VND.VENDOR_NAME
--summation--
    ,SUM(WOI.QUANTITY) AS MONTHLY_TOTAL_QUANTITY
    ,SUM(WOI.EXTENDED_COST) AS MONTHLY_TOTAL_COST
    ,SUM(WOI.EXTENDED_AMT) AS MONTHLY_TOTAL_SALE
    ,SUM(WOI.GP_AMT) AS MONTHLY_TOTAL_GROSS_PROFIT
    ,CASE
        WHEN MONTHLY_TOTAL_SALE = 0 THEN 0.00
        ELSE ((MONTHLY_TOTAL_GROSS_PROFIT/NULLIF(MONTHLY_TOTAL_SALE,0))*100)::NUMBER(18,2)
     END AS MONTHLY_GROSS_PROFIT_PCT --%
--FEE SALES--
    ,SUM(CASE WHEN FEE.CHARGES_TYPE IN ('COMMERCIAL CHARGES','OTR CHARGES') THEN WOI.QUANTITY ELSE 0.00 END) AS MONTHLY_TOTAL_FEE_QUANTITY
    ,SUM(CASE WHEN FEE.CHARGES_TYPE IN ('COMMERCIAL CHARGES','OTR CHARGES') THEN WOI.EXTENDED_COST ELSE 0.00 END) AS MONTHLY_TOTAL_FEE_COST
    ,SUM(CASE WHEN FEE.CHARGES_TYPE IN ('COMMERCIAL CHARGES','OTR CHARGES') THEN WOI.EXTENDED_AMT ELSE 0.00 END) AS MONTHLY_TOTAL_FEE_SALE
    ,SUM(CASE WHEN FEE.CHARGES_TYPE IN ('COMMERCIAL CHARGES','OTR CHARGES') THEN WOI.GP_AMT ELSE 0.00 END) AS MONTHLY_TOTAL_FEE_GROSS_PROFIT
    ,CASE
        WHEN MONTHLY_TOTAL_FEE_SALE = 0 THEN 0.00
        ELSE ((MONTHLY_TOTAL_FEE_GROSS_PROFIT/NULLIF(MONTHLY_TOTAL_FEE_SALE,0))*100)::NUMBER(18,2)
     END AS MONTHLY_FEE_GROSS_PROFIT_PCT
--CATEGORY 88 SALES--
    ,SUM(CASE WHEN CAT.CATEGORY_ID =88 THEN WOI.QUANTITY ELSE 0.00 END) AS MONTHLY_TOTAL_CAT88_QUANTITY
    ,SUM(CASE WHEN CAT.CATEGORY_ID =88 THEN WOI.EXTENDED_COST ELSE 0.00 END) AS MONTHLY_TOTAL_CAT88_COST
    ,SUM(CASE WHEN CAT.CATEGORY_ID =88 THEN WOI.EXTENDED_AMT ELSE 0.00 END) AS MONTHLY_TOTAL_CAT88_SALE
    ,SUM(CASE WHEN CAT.CATEGORY_ID =88 THEN WOI.GP_AMT ELSE 0.00 END) AS MONTHLY_TOTAL_CAT88_GROSS_PROFIT
    ,CASE
        WHEN MONTHLY_TOTAL_CAT88_SALE = 0 THEN 0.00
        ELSE ((MONTHLY_TOTAL_CAT88_GROSS_PROFIT/NULLIF(MONTHLY_TOTAL_CAT88_SALE,0))*100)::NUMBER(18,2)
     END AS MONTHLY_CAT88_GROSS_PROFIT_PCT
-- Additional Monthly Metrics
    ,COUNT(DISTINCT CAL.FISCAL_DATE) AS DAYS_WITH_TRANSACTIONS,
    AVG(WOI.QUANTITY) AS AVG_DAILY_SALE,
    MIN(CAL.FISCAL_DATE) AS FIRST_TRANSACTION_DATE,
    MAX(CAL.FISCAL_DATE) AS LAST_TRANSACTION_DATE
--FROM PART---
FROM
--Fetching only active open and invoiced orders from header table--1,554,204--3,890,238--1.6M
    ANALYTICS.SILVER_SALES.T_FCT_WORK_ORDER_HEADER AS WOH
--FISCAL CALENDAR
JOIN ANALYTICS.SILVER_SALES.T_DIM_DATE CAL
    ON WOH.TRANSACTION_DATE_SK = CAL.DATE_KEY
    AND WOH.IS_CURRENT_FLAG = TRUE
    AND UPPER(TRIM(WOH.WORK_ORDER_STATUS)) IN ('', 'I')
-- Filter for past 5 years from current month
        AND DATE_TRUNC('MONTH', CAL.FISCAL_DATE) >= DATE_TRUNC('MONTH', DATEADD('YEAR', -5, CURRENT_DATE()))
        --AND DATE_TRUNC('MONTH', CAL.FISCAL_DATE) <= DATE_TRUNC('MONTH', CURRENT_DATE())
--Work order item details table
JOIN ANALYTICS.SILVER_SALES.T_FCT_WORK_ORDER_ITEM_DETAILS AS WOI
	ON  WOI.IS_CURRENT_FLAG = TRUE
	AND WOH.STORE_NUMBER = WOI.STORE_NUMBER
	AND WOH.FORM_TYPE_CODE = WOI.FORM_TYPE_CODE
	AND WOH.POS_PREFIX = WOI.POS_PREFIX
	AND WOH.WORK_ORDER_NUMBER = WOI.WORK_ORDER_NUMBER
--CUSTOMER
LEFT JOIN ANALYTICS.SILVER_SALES.T_DIM_CUSTOMER CUST
	ON WOH.CUSTOMER_SK = CUST.CUSTOMER_SK
LEFT JOIN ANALYTICS.SILVER_SALES.T_DIM_CUSTOMER PCUST
	ON CUST.PARENT_CUSTOMER_ID = PCUST.CUSTOMER_ID
	AND PCUST.IS_CURRENT_FLAG = TRUE
--CUSTOMER ACCOUNT
LEFT JOIN ANALYTICS.SILVER_SALES.T_DIM_CUSTOMER_ACCOUNT CA--TYPE-1
    ON CUST.ACCOUNT_TYPE = CA.ACCOUNT_TYPE
--STORE
LEFT JOIN ANALYTICS.SILVER_SALES.T_DIM_STORE STR
	ON WOH.STORE_NUMBER = STR.STORE_NUMBER
    AND STR.IS_CURRENT_FLAG = TRUE
---DISTRIBUTION CENTER
LEFT JOIN ANALYTICS.SILVER_SALES.T_DIM_DISTRIBUTION_CENTER DC --TYPE-1
    ON WOH.STORE_NUMBER = DC.STORE_ID
--FORM TYPE
LEFT JOIN ANALYTICS.SILVER_SALES.T_DIM_FORM_TYPE FT
	ON WOH.FORM_TYPE_CODE = FT.FORM_TYPE_CODE
    AND FT.IS_CURRENT_FLAG = TRUE
--SALES REP
LEFT JOIN ANALYTICS.SILVER_SALES.T_DIM_SALES_REP SR
	ON WOH.SALES_REP_SK = SR.SALES_REP_SK
--ITEM
LEFT JOIN ANALYTICS.SILVER_SALES.T_DIM_PRODUCT ITM
	ON WOI.PRODUCT_SK = ITM.PRODUCT_SK
--CATAGORY
LEFT JOIN ANALYTICS.SILVER_SALES.T_DIM_INVENTORY_CATEGORY CAT
	ON ITM.INVENTORY_CATEGORY_SK = CAT.INVENTORY_CATEGORY_SK
--CATAGORY GROUP
LEFT JOIN ANALYTICS.SILVER_SALES.T_DIM_CATEGORY_GROUP CATG
	ON CAT.CATEGORY_ID = CATG.CATEGORY_ID
--CATAGORY GROUP NAME
LEFT JOIN ANALYTICS.SILVER_SALES.T_DIM_CATEGORY_GROUP_NAME CATGN
	ON CATG.GROUP_ID = CATGN.GROUP_ID
--CLASS
LEFT JOIN ANALYTICS.SILVER_SALES.T_DIM_INVENTORY_CLASS CLS
	ON ITM.INVENTORY_CLASS_SK = CLS.INVENTORY_CLASS_SK
--VENDOR--
LEFT JOIN ANALYTICS.SILVER_SALES.T_DIM_INVENTORY_VENDOR VND
    ON ITM.INVENTORY_VENDOR_SK = VND.INVENTORY_VENDOR_SK
--Item fee charges--
LEFT JOIN ANALYTICS.SILVER_SALES.T_DIM_FEE_ITEMS FEE
    ON ITM.ITEM_NUMBER = FEE.ITEM_NUMBER
--GROUPING DIMENSIONS
GROUP BY 	 WORK_ORDER_STATUS
    ,CAL.FISCAL_YEAR
    ,CAL.FISCAL_MONTH
    ,CAL.FISCAL_MONTH_NAME
    ,CAL.FISCAL_QUARTER
    ,CUST.CUSTOMER_NAME
    ,PCUST.CUSTOMER_NAME
    ,CA.ACCOUNT_TYPE_NAME
    ,STR.STORE_NUMBER
    ,STR.STORE_NAME
    ,STR.CITY
    ,STR.STATE
    ,DC.DISTRIBUTION_CENTER_ID
    ,FT.FORM_TYPE_CODE
    ,FT.FORM_TYPE_NAME
    ,SR.SALES_REP_NUMBER
    ,SR.SALES_REP_NAME
    ,CAT.CATEGORY_ID
    ,CAT.CATEGORY_NAME
    ,CATG.GROUP_ID
    ,CATGN.GROUP_NAME
    ,CLS.CLASS_ID
    ,CLS.CLASS_NAME
    ,VND.VENDOR_NUMBER
    ,VND.VENDOR_NAME;
	
----------------------------------------------------------------------------

--V_SMM_MONTHLY_SALES_DASHBOARD

create or replace view REPORTING.GOLD_SALES.V_SMM_MONTHLY_SALES_DASHBOARD as
WITH BASE_SALES AS
(SELECT
-- Date Dimensions
     CAL.FISCAL_YEAR AS TRANSACTION_YEAR
    ,LPAD(CAL.FISCAL_MONTH,2,0)||' '||CAL.FISCAL_MONTH_NAME AS TRANSACTION_MONTH_NAME

--summation--
    ,SUM(WOI.QUANTITY)::DECIMAL(18,2) AS QUANTITY
    ,SUM(WOI.EXTENDED_AMT)::DECIMAL(18,2) AS SALES
    ,SUM(WOI.GP_AMT)::DECIMAL(18,2) AS GROSS_PROFIT
    ,CASE
        WHEN SALES = 0 THEN 0.00
        ELSE ((GROSS_PROFIT/SALES)*100)::NUMBER(18,2)
     END::DECIMAL(18,2) AS GROSS_PROFIT_PCT --%

--FROM PART---
FROM
--Fetching only active open and invoiced orders from header table--1,554,204--3,890,238--1.6M
    ANALYTICS.SILVER_SALES.T_FCT_WORK_ORDER_HEADER AS WOH
--FISCAL CALENDAR
JOIN ANALYTICS.SILVER_SALES.T_DIM_DATE CAL
    ON WOH.TRANSACTION_DATE_SK = CAL.DATE_KEY
    AND WOH.IS_CURRENT_FLAG = TRUE
    AND UPPER(TRIM(WOH.WORK_ORDER_STATUS)) IN ('', 'I')
-- Filter for past 5 years from current month
    AND DATE_TRUNC('MONTH', CAL.FISCAL_DATE) >= DATE_TRUNC('MONTH', DATEADD('YEAR', -5, CURRENT_DATE()))

--Work order item details table
JOIN ANALYTICS.SILVER_SALES.T_FCT_WORK_ORDER_ITEM_DETAILS AS WOI
	ON  WOI.IS_CURRENT_FLAG = TRUE
	AND WOH.STORE_NUMBER = WOI.STORE_NUMBER
	AND WOH.FORM_TYPE_CODE = WOI.FORM_TYPE_CODE
	AND WOH.POS_PREFIX = WOI.POS_PREFIX
	AND WOH.WORK_ORDER_NUMBER = WOI.WORK_ORDER_NUMBER

--GROUPING DIMENSIONS
GROUP BY
     CAL.FISCAL_YEAR
    ,TRANSACTION_MONTH_NAME
),
UNPIVOT_SALES AS
  (SELECT
    KPI_TYPE,
    TRANSACTION_YEAR,
    TRANSACTION_MONTH_NAME,
    VALUE
    FROM BASE_SALES
  UNPIVOT (
        VALUE FOR KPI_TYPE IN (
        QUANTITY,
        SALES, 
        GROSS_PROFIT,
        GROSS_PROFIT_PCT
        ))
)
SELECT
    TRANSACTION_YEAR,
    TRANSACTION_MONTH_NAME,
    CASE
        WHEN KPI_TYPE = 'GROSS_PROFIT' THEN 'GP $ (Gross Profit)'
        WHEN KPI_TYPE = 'GROSS_PROFIT_PCT' THEN 'GP % (Gross Profit Margin)'
        WHEN KPI_TYPE = 'QUANTITY' THEN 'QTY (Quantity)'
        ELSE KPI_TYPE
     END AS KPI,
    VALUE,
    LAG(VALUE, 1) OVER (PARTITION BY KPI_TYPE ORDER BY TRANSACTION_YEAR, TRANSACTION_MONTH_NAME) AS PREV_VALUE,
    (((VALUE - PREV_VALUE)/PREV_VALUE)*100)::DECIMAL(18,2) AS CHANGE,
    CASE
        WHEN KPI_TYPE = 'SALES' THEN 'Sum of all transaction values'
        WHEN KPI_TYPE = 'GROSS_PROFIT' THEN 'Sales - Cost'
        WHEN KPI_TYPE = 'GROSS_PROFIT_PCT' THEN '(GP $ / Sales) x 100'
        WHEN KPI_TYPE = 'QUANTITY' THEN 'Count of Items'
        ELSE KPI_TYPE
     END AS FORMULA,
    CASE
        WHEN KPI_TYPE = 'SALES' THEN 'SUM(W2AMT)'
        WHEN KPI_TYPE = 'GROSS_PROFIT' THEN 'SUM(W2AMT) - SUM(W2CAMT)'
        WHEN KPI_TYPE = 'GROSS_PROFIT_PCT' THEN '(SUM(W2AMT) / SUM(W2AMT)) X 100'
        WHEN KPI_TYPE = 'QUANTITY' THEN 'SUM(W2QTY)'
        ELSE KPI_TYPE
     END AS TECHNICAL_IMPLEMENTATION,

FROM UNPIVOT_SALES
ORDER BY TRANSACTION_YEAR, TRANSACTION_MONTH_NAME, 
    CASE
        WHEN KPI_TYPE = 'SALES' THEN 1
        WHEN KPI_TYPE = 'GROSS_PROFIT' THEN 2
        WHEN KPI_TYPE = 'GROSS_PROFIT_PCT' THEN 3
        WHEN KPI_TYPE = 'QUANTITY' THEN 4
    END
;


----------------------------------------------------------------------------

--V_SMM_OPEN_VS_DAILY_SALE

create or replace view REPORTING.GOLD_SALES.V_SMM_OPEN_VS_DAILY_SALE as
SELECT
-----Dimensions----
     CAL.FISCAL_DATE AS TRANSACTION_DT
    ,TRY_TO_DATE(WOH.ORIGIN_TRANSACTION_SK::VARCHAR(8),'YYYYMMDD') AS ORG_TRANSACTION_DT
    ,CAL.FISCAL_WEEKDAY_NAME
    ,CASE    WHEN TRIM(WOH.WORK_ORDER_STATUS) = '' THEN 'Open'
            WHEN TRIM(WOH.WORK_ORDER_STATUS) = 'I' THEN 'Invoiced'
            ELSE 'Other-Not-Recognized'
    END AS WORK_ORDER_STATUS
    ,STR.STORE_NUMBER::VARCHAR AS STORE_NUMBER
    ,STR.STORE_NAME
    ,STR.STORE_NUMBER||'-'||STR.STORE_NAME AS STORE_NUM_NAME
    ,STR.CITY
    ,STR.STATE
    ,DC.DISTRIBUTION_CENTER_ID::VARCHAR AS REGION
    ,SR.SALES_REP_NUMBER::VARCHAR AS SALES_REP_NUMBER
    ,SR.SALES_REP_NAME
	,SR.SALES_REP_NUMBER||'-'||SR.SALES_REP_NAME AS SALES_REP_NUM_NAME
	,MGR.MANAGER_NAME AS STORE_MANAGER_NAME
    ,MGR.AREA_DIRECTOR_MANAGER_NUMBER::VARCHAR AS AREA_MANAGER_NUMBER
    ,AMGR.SALES_REP_NAME AS AREA_MANAGER_NAME
    ,MGR.AREA_DIRECTOR_MANAGER_NUMBER||'-'||AMGR.SALES_REP_NAME AS AREA_MANAGER_NUM_NAME
    ,MGR.REGIONAL_SALES_MANAGER_NUMBER::VARCHAR AS REGIONAL_MANAGER_NUMBER
    ,RMGR.SALES_REP_NAME AS REGIONAL_MANAGER_NAME
    ,MGR.REGIONAL_SALES_MANAGER_NUMBER||'-'||RMGR.SALES_REP_NAME AS REGIONAL_MANAGER_NUM_NAME
    ,CUST.CUSTOMER_ID::VARCHAR AS CUSTOMER_ID
    ,CUST.CUSTOMER_NAME
    ,PCUST.CUSTOMER_NAME AS PARENT_CUSTOMER_NAME
    ,CA.ACCOUNT_TYPE_NAME
    ,CASE
        WHEN TRIM(UPPER(CA.ACCOUNT_TYPE_NAME)) LIKE 'NATIONAL%' THEN 'NATIONAL'
        ELSE 'LOCAL'
    END AS ACCOUNT_GROUP

-----Aggregated metrics calculation---------

-- Sales metrics (excluding status 'V', 'P' and blank)--(Including I)
    ,SUM(CASE WHEN UPPER(TRIM(WOH.WORK_ORDER_STATUS)) = 'I' THEN WOI.EXTENDED_AMT ELSE 0 END) AS DAILY_SALES
    ,SUM(CASE WHEN UPPER(TRIM(WOH.WORK_ORDER_STATUS)) = 'I' THEN WOI.GP_AMT ELSE 0 END) AS GROSS_PROFIT
    ,SUM(CASE WHEN UPPER(TRIM(WOH.WORK_ORDER_STATUS)) = 'I' THEN WOI.QUANTITY ELSE 0 END) AS QUANTITY
    ,SUM(CASE WHEN UPPER(TRIM(WOH.WORK_ORDER_STATUS)) = 'I' THEN WOI.EXTENDED_COST ELSE 0 END) AS COST
-- DAILY GP %------------
    ,CASE
        WHEN DAILY_SALES = 0 THEN 0.00
        ELSE
            ((GROSS_PROFIT/NULLIF(DAILY_SALES,0))*100)::NUMBER(18,2)
     END AS GP_PERCENT
-- Open Sales (excluding status 'I', 'V' and 'P')
    ,SUM(CASE WHEN TRIM(WOH.WORK_ORDER_STATUS) = '' THEN WOI.EXTENDED_AMT ELSE 0 END) AS OPEN_SALES
    ,SUM(CASE WHEN TRIM(WOH.WORK_ORDER_STATUS) = '' THEN WOI.GP_AMT ELSE 0 END) AS OPEN_GROSS_PROFIT
    ,SUM(CASE WHEN TRIM(WOH.WORK_ORDER_STATUS) = '' THEN WOI.QUANTITY ELSE 0 END) AS OPEN_QUANTITY
    ,SUM(CASE WHEN TRIM(WOH.WORK_ORDER_STATUS) = '' THEN WOI.EXTENDED_COST ELSE 0 END) AS OPEN_COST
-- Open GP %
    ,CASE 
        WHEN OPEN_SALES = 0 THEN 0.00
        ELSE 
            ((OPEN_GROSS_PROFIT/NULLIF(OPEN_SALES, 0))*100)::NUMBER(18,2)
     END AS OPEN_GP_PERCENT
-- Open/Daily Sales %
    ,CASE 
        WHEN DAILY_SALES = 0 THEN 0.00
        ELSE ((OPEN_SALES/DAILY_SALES)*100)::NUMBER(18,2)
     END AS OPEN_TO_DAILY_SALES_PERCENT

--------FROM PART--------
FROM 
--Work Order Header
(SELECT * FROM ANALYTICS.SILVER_SALES.T_FCT_WORK_ORDER_HEADER
        WHERE IS_CURRENT_FLAG = TRUE AND UPPER(TRIM(WORK_ORDER_STATUS)) IN ('','I')) AS WOH
--FISCAL CALENDAR
LEFT JOIN ANALYTICS.SILVER_SALES.T_DIM_DATE CAL --TYPE-0
    ON WOH.TRANSACTION_DATE_SK = CAL.DATE_KEY
--Work order item details table
JOIN ANALYTICS.SILVER_SALES.T_FCT_WORK_ORDER_ITEM_DETAILS AS WOI
	ON  WOI.IS_CURRENT_FLAG = TRUE
	AND WOH.STORE_NUMBER = WOI.STORE_NUMBER
	AND WOH.FORM_TYPE_CODE = WOI.FORM_TYPE_CODE
	AND WOH.POS_PREFIX = WOI.POS_PREFIX
	AND WOH.WORK_ORDER_NUMBER = WOI.WORK_ORDER_NUMBER
--CUSTOMER
LEFT JOIN ANALYTICS.SILVER_SALES.T_DIM_CUSTOMER CUST --TYPE-2
	ON WOH.CUSTOMER_SK = CUST.CUSTOMER_SK
LEFT JOIN ANALYTICS.SILVER_SALES.T_DIM_CUSTOMER PCUST --TYPE-2
	ON CUST.PARENT_CUSTOMER_ID = PCUST.CUSTOMER_ID
	AND PCUST.IS_CURRENT_FLAG = TRUE
--CUSTOMER ACCOUNT
LEFT JOIN ANALYTICS.SILVER_SALES.T_DIM_CUSTOMER_ACCOUNT CA--TYPE-2
    ON CUST.ACCOUNT_TYPE = CA.ACCOUNT_TYPE
--STORE
LEFT JOIN ANALYTICS.SILVER_SALES.T_DIM_STORE STR --TYPE-2
	ON WOH.STORE_NUMBER = STR.STORE_NUMBER
    AND STR.IS_CURRENT_FLAG = TRUE
--SALES REP
LEFT JOIN ANALYTICS.SILVER_SALES.T_DIM_SALES_REP SR --TYPE-2
	ON WOH.SALES_REP_SK = SR.SALES_REP_SK
--DISTRIBUTION CENTER
LEFT JOIN ANALYTICS.SILVER_SALES.T_DIM_DISTRIBUTION_CENTER DC --TYPE-1
    ON WOH.STORE_NUMBER = DC.STORE_ID
--Store Manager
LEFT JOIN ANALYTICS.SILVER_SALES.T_DIM_STORE_MANAGER MGR --TYPE-2
    ON WOH.STORE_NUMBER = MGR.STORE_NUMBER
    AND MGR.IS_CURRENT_FLAG = TRUE
--REGIONAL MANAGER NAME
LEFT JOIN ANALYTICS.SILVER_SALES.T_DIM_SALES_REP RMGR --TYPE-2
	ON MGR.REGIONAL_SALES_MANAGER_NUMBER = RMGR.SALES_REP_NUMBER
--AREA MANAGER NAME
LEFT JOIN ANALYTICS.SILVER_SALES.T_DIM_SALES_REP AMGR --TYPE-2
	ON MGR.AREA_DIRECTOR_MANAGER_NUMBER = AMGR.SALES_REP_NUMBER

--GROUPIN DIMENSIONS
GROUP BY
     ORG_TRANSACTION_DT
    ,TRANSACTION_DT
    ,CAL.FISCAL_WEEKDAY_NAME
    ,WOH.WORK_ORDER_STATUS
    ,STR.STORE_NUMBER
    ,STR.STORE_NAME
    ,STR.CITY
    ,STR.STATE
    ,DC.DISTRIBUTION_CENTER_ID
    ,SR.SALES_REP_NUMBER
    ,SR.SALES_REP_NAME
    ,MGR.MANAGER_NAME
    ,MGR.AREA_DIRECTOR_MANAGER_NUMBER
    ,AMGR.SALES_REP_NAME
    ,MGR.REGIONAL_SALES_MANAGER_NUMBER
    ,RMGR.SALES_REP_NAME
    ,CUST.CUSTOMER_ID
    ,CUST.CUSTOMER_NAME
    ,PARENT_CUSTOMER_NAME
    ,CA.ACCOUNT_TYPE_NAME
;

----------------------------------------------------------------------------

--V_SMM_OPEN_WORK_ORDER_AGING_SALE

create or replace view REPORTING.GOLD_SALES.V_SMM_OPEN_WORK_ORDER_AGING_SALE as
WITH AGING_DATA AS (
    SELECT
    -----Dimensions----
         CAL.FISCAL_DATE AS TRANSACTION_DT
        ,TRY_TO_DATE(WOH.ORIGIN_TRANSACTION_SK::VARCHAR(8),'YYYYMMDD') AS ORG_TRANSACTION_DT
        ,CAL.FISCAL_WEEKDAY_NAME
        ,'Open' AS WORK_ORDER_STATUS
        ,WOH.FORM_TYPE_CODE
        ,WOH.POS_PREFIX
        ,WOH.WORK_ORDER_NUMBER::VARCHAR AS WORK_ORDER_NUMBER
        ,STR.STORE_NUMBER::VARCHAR AS STORE_NUMBER
        ,STR.STORE_NAME
        ,STR.STORE_NUMBER||'-'||STR.STORE_NAME AS STORE_NUM_NAME
        ,STR.CITY
        ,STR.STATE
        ,DC.DISTRIBUTION_CENTER_ID::VARCHAR AS REGION
        ,SR.SALES_REP_NUMBER::VARCHAR AS SALES_REP_NUMBER
        ,SR.SALES_REP_NAME
    	,SR.SALES_REP_NUMBER||'-'||SR.SALES_REP_NAME AS SALES_REP_NUM_NAME
    	,MGR.MANAGER_NAME AS STORE_MANAGER_NAME
        ,MGR.AREA_DIRECTOR_MANAGER_NUMBER::VARCHAR AS AREA_MANAGER_NUMBER
        ,AMGR.SALES_REP_NAME AS AREA_MANAGER_NAME
        ,MGR.AREA_DIRECTOR_MANAGER_NUMBER||'-'||AMGR.SALES_REP_NAME AS AREA_MANAGER_NUM_NAME
        ,MGR.REGIONAL_SALES_MANAGER_NUMBER::VARCHAR AS REGIONAL_MANAGER_NUMBER
        ,RMGR.SALES_REP_NAME AS REGIONAL_MANAGER_NAME
        ,MGR.REGIONAL_SALES_MANAGER_NUMBER||'-'||RMGR.SALES_REP_NAME AS REGIONAL_MANAGER_NUM_NAME
        ,CUST.CUSTOMER_ID::VARCHAR AS CUSTOMER_ID
        ,CUST.CUSTOMER_NAME
        ,PCUST.CUSTOMER_NAME AS PARENT_CUSTOMER_NAME
        ,CA.ACCOUNT_TYPE_NAME
        ,CASE
            WHEN TRIM(UPPER(CA.ACCOUNT_TYPE_NAME)) LIKE 'NATIONAL%' THEN 'NATIONAL'
            ELSE 'LOCAL'
        END AS ACCOUNT_GROUP
    -- Aging Bucket 
        ,CASE 
        	WHEN DATEDIFF('DAY', ORG_TRANSACTION_DT, CURRENT_DATE) < 0 THEN '1. (<0 Days)'
        	WHEN DATEDIFF('DAY', ORG_TRANSACTION_DT, CURRENT_DATE) = 0 THEN '2. (0 Days)'
        	WHEN (DATEDIFF('DAY', ORG_TRANSACTION_DT, CURRENT_DATE) BETWEEN 1 AND 7) THEN '3. (1-7 Days)'
        	WHEN (DATEDIFF('DAY', ORG_TRANSACTION_DT, CURRENT_DATE) BETWEEN 8 AND 14) THEN '4. (8-14 Days)'
        	WHEN (DATEDIFF('DAY', ORG_TRANSACTION_DT, CURRENT_DATE) BETWEEN 15 AND 21) THEN '5. (15-21 Days)'
        	WHEN (DATEDIFF('DAY', ORG_TRANSACTION_DT, CURRENT_DATE) BETWEEN 22 AND 31) THEN '6. (22-31 Days)'
        	WHEN (DATEDIFF('DAY', ORG_TRANSACTION_DT, CURRENT_DATE) BETWEEN 32 AND 60) THEN '7. (32-60 Days)'
        	WHEN (DATEDIFF('DAY', ORG_TRANSACTION_DT, CURRENT_DATE) BETWEEN 61 AND 90) THEN '8. (61-90 Days)'
            WHEN (DATEDIFF('DAY', ORG_TRANSACTION_DT, CURRENT_DATE) > 90) THEN '9. (>90 Days)'
        	ELSE 'Not Opened'
        END AS AGING_BUCKET
    
    -----Aggregated metrics calculation---------
    --COUNT OF WORK ORDERS--
        ,COUNT(DISTINCT WOH.WORK_ORDER_HEADER_SK) AS WORK_ORDER_COUNT
    -- Open Sales (excluding status 'V', 'P' and 'I')
        ,SUM(WOI.EXTENDED_AMT) AS OPEN_SALES
    -- Open GP
        ,SUM(WOI.GP_AMT) AS OPEN_GROSS_PROFIT
    -- Open GP %
        ,CASE 
            WHEN OPEN_SALES = 0 THEN 0.00
            ELSE 
                ((OPEN_GROSS_PROFIT/NULLIF(OPEN_SALES, 0))*100)::NUMBER(18,2)
         END AS OPEN_GP_PERCENT
    --OPEN OTY
        ,SUM(WOI.QUANTITY) AS OPEN_QUANTITY
    --OPEN COST
        ,SUM(WOI.EXTENDED_COST) AS OPEN_COST
    
    --------FROM PART--------
    FROM 
    --Work Order Header
    (SELECT * FROM ANALYTICS.SILVER_SALES.T_FCT_WORK_ORDER_HEADER
            WHERE IS_CURRENT_FLAG = TRUE AND TRIM(WORK_ORDER_STATUS) = '') AS WOH
    --FISCAL CALENDAR
    LEFT JOIN ANALYTICS.SILVER_SALES.T_DIM_DATE CAL --TYPE-0
        ON WOH.TRANSACTION_DATE_SK = CAL.DATE_KEY
    --Work order item details table
    JOIN ANALYTICS.SILVER_SALES.T_FCT_WORK_ORDER_ITEM_DETAILS AS WOI
    	ON  WOI.IS_CURRENT_FLAG = TRUE
    	AND WOH.STORE_NUMBER = WOI.STORE_NUMBER
    	AND WOH.FORM_TYPE_CODE = WOI.FORM_TYPE_CODE
    	AND WOH.POS_PREFIX = WOI.POS_PREFIX
    	AND WOH.WORK_ORDER_NUMBER = WOI.WORK_ORDER_NUMBER
    --CUSTOMER
    LEFT JOIN ANALYTICS.SILVER_SALES.T_DIM_CUSTOMER CUST --TYPE-2
    	ON WOH.CUSTOMER_SK = CUST.CUSTOMER_SK
    LEFT JOIN ANALYTICS.SILVER_SALES.T_DIM_CUSTOMER PCUST --TYPE-2
    	ON CUST.PARENT_CUSTOMER_ID = PCUST.CUSTOMER_ID
    	AND PCUST.IS_CURRENT_FLAG = TRUE
    --CUSTOMER ACCOUNT
    LEFT JOIN ANALYTICS.SILVER_SALES.T_DIM_CUSTOMER_ACCOUNT CA--TYPE-2
        ON CUST.ACCOUNT_TYPE = CA.ACCOUNT_TYPE
    --STORE
    LEFT JOIN ANALYTICS.SILVER_SALES.T_DIM_STORE STR --TYPE-2
    	ON WOH.STORE_NUMBER = STR.STORE_NUMBER
        AND STR.IS_CURRENT_FLAG = TRUE
    --SALES REP
    LEFT JOIN ANALYTICS.SILVER_SALES.T_DIM_SALES_REP SR --TYPE-2
    	ON WOH.SALES_REP_SK = SR.SALES_REP_SK
    --DISTRIBUTION CENTER
    LEFT JOIN ANALYTICS.SILVER_SALES.T_DIM_DISTRIBUTION_CENTER DC --TYPE-1
        ON WOH.STORE_NUMBER = DC.STORE_ID
    --Store Manager
    LEFT JOIN ANALYTICS.SILVER_SALES.T_DIM_STORE_MANAGER MGR --TYPE-2
        ON WOH.STORE_NUMBER = MGR.STORE_NUMBER
        AND MGR.IS_CURRENT_FLAG = TRUE
    --REGIONAL MANAGER NAME
    LEFT JOIN ANALYTICS.SILVER_SALES.T_DIM_SALES_REP RMGR --TYPE-2
    	ON MGR.REGIONAL_SALES_MANAGER_NUMBER = RMGR.SALES_REP_NUMBER
    --AREA MANAGER NAME
    LEFT JOIN ANALYTICS.SILVER_SALES.T_DIM_SALES_REP AMGR --TYPE-2
    	ON MGR.AREA_DIRECTOR_MANAGER_NUMBER = AMGR.SALES_REP_NUMBER
    
    --GROUPIN DIMENSIONS
    GROUP BY
         ORG_TRANSACTION_DT
        ,TRANSACTION_DT
        ,CAL.FISCAL_WEEKDAY_NAME
        ,WOH.FORM_TYPE_CODE
        ,WOH.POS_PREFIX
        ,WOH.WORK_ORDER_NUMBER
        ,STR.STORE_NUMBER
        ,STR.STORE_NAME
        ,STR.CITY
        ,STR.STATE
        ,DC.DISTRIBUTION_CENTER_ID
        ,SR.SALES_REP_NUMBER
        ,SR.SALES_REP_NAME
        ,MGR.MANAGER_NAME
        ,MGR.AREA_DIRECTOR_MANAGER_NUMBER
        ,AMGR.SALES_REP_NAME
        ,MGR.REGIONAL_SALES_MANAGER_NUMBER
        ,RMGR.SALES_REP_NAME
        ,CUST.CUSTOMER_ID
        ,CUST.CUSTOMER_NAME
        ,PARENT_CUSTOMER_NAME
        ,CA.ACCOUNT_TYPE_NAME
        ,AGING_BUCKET
),
ALL_AGING_BUCKETS AS (
SELECT AGING_BUCKET
FROM VALUES
    ('1. (<0 Days)'),
    ('2. (0 Days)'),
    ('3. (1-7 Days)'),
    ('4. (8-14 Days)'),
    ('5. (15-21 Days)'),
    ('6. (22-31 Days)'),
    ('7. (32-60 Days)'),
    ('8. (61-90 Days)'),
    ('9. (>90 Days)')
 
AS BCKT(AGING_BUCKET)
)
-------Final Selection----
SELECT
     WOA.TRANSACTION_DT
    ,WOA.ORG_TRANSACTION_DT
    ,WOA.FISCAL_WEEKDAY_NAME
    ,WOA.WORK_ORDER_STATUS
    ,WOA.FORM_TYPE_CODE
    ,WOA.POS_PREFIX
    ,WOA.WORK_ORDER_NUMBER
    ,WOA.STORE_NUMBER
    ,WOA.STORE_NAME
    ,WOA.STORE_NUM_NAME
    ,WOA.CITY
    ,WOA.STATE
    ,WOA.REGION
    ,WOA.SALES_REP_NUMBER
    ,WOA.SALES_REP_NAME
    ,WOA.SALES_REP_NUM_NAME
    ,WOA.STORE_MANAGER_NAME
    ,WOA.AREA_MANAGER_NUMBER
    ,WOA.AREA_MANAGER_NAME
    ,WOA.AREA_MANAGER_NUM_NAME
    ,WOA.REGIONAL_MANAGER_NUMBER
    ,WOA.REGIONAL_MANAGER_NAME
    ,WOA.REGIONAL_MANAGER_NUM_NAME
    ,WOA.CUSTOMER_ID
    ,WOA.CUSTOMER_NAME
    ,WOA.PARENT_CUSTOMER_NAME
    ,WOA.ACCOUNT_TYPE_NAME
    ,WOA.ACCOUNT_GROUP
--Aging bucket from all bucket list--
    ,BCKT.AGING_BUCKET AS AGING_BUCKET
--Aggregating measures
    ,SUM(CASE WHEN WOA.AGING_BUCKET = BCKT.AGING_BUCKET THEN WOA.WORK_ORDER_COUNT ELSE 0 END) AS WORK_ORDER_COUNT
    ,SUM(CASE WHEN WOA.AGING_BUCKET = BCKT.AGING_BUCKET THEN WOA.OPEN_SALES ELSE 0.00 END) AS OPEN_SALES
    ,SUM(CASE WHEN WOA.AGING_BUCKET = BCKT.AGING_BUCKET THEN WOA.OPEN_GROSS_PROFIT ELSE 0.00 END) AS OPEN_GROSS_PROFIT
    ,SUM(CASE WHEN WOA.AGING_BUCKET = BCKT.AGING_BUCKET THEN WOA.OPEN_GP_PERCENT ELSE 0.00 END) AS OPEN_GP_PERCENT
    ,SUM(CASE WHEN WOA.AGING_BUCKET = BCKT.AGING_BUCKET THEN WOA.OPEN_QUANTITY ELSE 0.00 END) AS OPEN_QUANTITY
    ,SUM(CASE WHEN WOA.AGING_BUCKET = BCKT.AGING_BUCKET THEN WOA.OPEN_COST ELSE 0.00 END) AS OPEN_COST
--From Part for CTEs--
FROM ALL_AGING_BUCKETS BCKT
CROSS JOIN AGING_DATA WOA
GROUP BY
     WOA.TRANSACTION_DT
    ,WOA.ORG_TRANSACTION_DT
    ,WOA.FISCAL_WEEKDAY_NAME
    ,WOA.WORK_ORDER_STATUS
    ,WOA.FORM_TYPE_CODE
    ,WOA.POS_PREFIX
    ,WOA.WORK_ORDER_NUMBER
    ,WOA.STORE_NUMBER
    ,WOA.STORE_NAME
    ,WOA.STORE_NUM_NAME
    ,WOA.CITY
    ,WOA.STATE
    ,WOA.REGION
    ,WOA.SALES_REP_NUMBER
    ,WOA.SALES_REP_NAME
    ,WOA.SALES_REP_NUM_NAME
    ,WOA.STORE_MANAGER_NAME
    ,WOA.AREA_MANAGER_NUMBER
    ,WOA.AREA_MANAGER_NAME
    ,WOA.AREA_MANAGER_NUM_NAME
    ,WOA.REGIONAL_MANAGER_NUMBER
    ,WOA.REGIONAL_MANAGER_NAME
    ,WOA.REGIONAL_MANAGER_NUM_NAME
    ,WOA.CUSTOMER_ID
    ,WOA.CUSTOMER_NAME
    ,WOA.PARENT_CUSTOMER_NAME
    ,WOA.ACCOUNT_TYPE_NAME
    ,WOA.ACCOUNT_GROUP
    ,BCKT.AGING_BUCKET
;


----------------------------------------------------------------------------

--V_SMM_TOTAL_SALE

create or replace view REPORTING.GOLD_SALES.V_SMM_TOTAL_SALE as
SELECT
    CASE    WHEN TRIM(WOH.WORK_ORDER_STATUS) = '' THEN 'Open'
            WHEN TRIM(WOH.WORK_ORDER_STATUS) = 'I' THEN 'Invoiced'
            ELSE 'Other-Not-Recognized'
    END AS WORK_ORDER_STATUS
	,CAL.FISCAL_DATE AS TRANSACTION_DT
    ,CAL.FISCAL_YEAR AS TRANSACTION_YEAR
    ,CAL.FISCAL_MONTH AS TRANSACTION_MONTH --num
    ,CAL.FISCAL_YEAR||'-'||LPAD(CAL.FISCAL_MONTH,2,0) AS TRANSACTION_YEAR_MONTH
    ,LPAD(CAL.FISCAL_MONTH,2,0)||' '||CAL.FISCAL_MONTH_NAME AS TRANSACTION_MONTH_NAME
    ,CAL.FISCAL_QUARTER AS TRANSACTION_QUARTER
    ,'DAY-'||CAL.FISCAL_DAY_OF_MONTH AS TRANSACTION_DAY_OF_MONTH
    ,CAL.FISCAL_YEAR||LPAD(CAL.FISCAL_WEEK_OF_YEAR,2,0) AS TRANSACTION_WEEK_OF_YEAR
    ,CUST.CUSTOMER_NAME
    ,PCUST.CUSTOMER_NAME AS PARENT_CUSTOMER_NAME
    ,CA.ACCOUNT_TYPE_NAME
    ,CASE
        WHEN TRIM(UPPER(CA.ACCOUNT_TYPE_NAME)) LIKE 'NATIONAL%' THEN 'NATIONAL'
        ELSE 'LOCAL'
    END AS ACCOUNT_GROUP
    ,STR.STORE_NUMBER::VARCHAR AS STORE_NUMBER
    ,STR.STORE_NAME
    ,STR.STORE_NUMBER||'-'||STR.STORE_NAME AS STORE_NUM_NAME
    ,STR.CITY
    ,STR.STATE
    ,DC.DISTRIBUTION_CENTER_ID::VARCHAR AS REGION
    ,FT.FORM_TYPE_CODE
    ,FT.FORM_TYPE_NAME
    ,SR.SALES_REP_NUMBER::VARCHAR AS SALES_REP_NUMBER
    ,SR.SALES_REP_NAME
	,SR.SALES_REP_NUMBER||'-'||SR.SALES_REP_NAME AS SALES_REP_NUM_NAME
    ,CAT.CATEGORY_ID::VARCHAR AS CATEGORY_CODE
    ,CAT.CATEGORY_NAME
    ,CAT.CATEGORY_ID||'-'||CAT.CATEGORY_NAME AS CATEGORY_CODE_NAME
    ,CATG.GROUP_ID::VARCHAR AS GROUP_ID
    ,CATGN.GROUP_NAME AS CATEGORY_GROUP_NAME
    ,CATG.GROUP_ID||'-'||CATGN.GROUP_NAME AS CATEGORY_GROUP_ID_NAME
    ,CLS.CLASS_ID::VARCHAR AS CLASS_ID
    ,CLS.CLASS_NAME
    ,CLS.CLASS_ID||'-'||CLS.CLASS_NAME AS CLASS_ID_NAME
    ,SUM(WOI.QUANTITY) AS TOTAL_QUANTITY
    ,SUM(WOI.EXTENDED_COST) AS TOTAL_COST
    ,SUM(WOI.EXTENDED_AMT) AS TOTAL_SALE
    ,SUM(WOI.GP_AMT) AS TOTAL_GROSS_PROFIT
    ,((TOTAL_GROSS_PROFIT/NULLIF(TOTAL_SALE,0))*100)::NUMBER(18,2) AS TOTAL_GROSS_PROFIT_PCT --%
    
--FROM PART---
FROM
--Fetching only active open and invoiced orders from header table--1,554,204--3,890,238--1.6M
(SELECT * FROM ANALYTICS.SILVER_SALES.T_FCT_WORK_ORDER_HEADER
        WHERE IS_CURRENT_FLAG = TRUE AND UPPER(TRIM(WORK_ORDER_STATUS)) IN ('', 'I')) AS WOH
--FISCAL CALENDAR
LEFT JOIN ANALYTICS.SILVER_SALES.T_DIM_DATE CAL --TYPE-0
    ON WOH.TRANSACTION_DATE_SK = CAL.DATE_KEY
--CUSTOMER
LEFT JOIN ANALYTICS.SILVER_SALES.T_DIM_CUSTOMER CUST
	ON WOH.CUSTOMER_SK = CUST.CUSTOMER_SK
LEFT JOIN ANALYTICS.SILVER_SALES.T_DIM_CUSTOMER PCUST
	ON CUST.PARENT_CUSTOMER_ID = PCUST.CUSTOMER_ID
	AND PCUST.IS_CURRENT_FLAG = TRUE
--CUSTOMER ACCOUNT
LEFT JOIN ANALYTICS.SILVER_SALES.T_DIM_CUSTOMER_ACCOUNT CA--TYPE-1
    ON CUST.ACCOUNT_TYPE = CA.ACCOUNT_TYPE
--Work order item details table
LEFT JOIN ANALYTICS.SILVER_SALES.T_FCT_WORK_ORDER_ITEM_DETAILS AS WOI
	ON  WOI.IS_CURRENT_FLAG = TRUE
	AND WOH.STORE_NUMBER = WOI.STORE_NUMBER
	AND WOH.FORM_TYPE_CODE = WOI.FORM_TYPE_CODE
	AND WOH.POS_PREFIX = WOI.POS_PREFIX
	AND WOH.WORK_ORDER_NUMBER = WOI.WORK_ORDER_NUMBER
--STORE
LEFT JOIN ANALYTICS.SILVER_SALES.T_DIM_STORE STR
	ON WOH.STORE_NUMBER = STR.STORE_NUMBER
    AND STR.IS_CURRENT_FLAG = TRUE
---DISTRIBUTION CENTER
LEFT JOIN ANALYTICS.SILVER_SALES.T_DIM_DISTRIBUTION_CENTER DC --TYPE-1
    ON WOH.STORE_NUMBER = DC.STORE_ID
--FORM TYPE
LEFT JOIN ANALYTICS.SILVER_SALES.T_DIM_FORM_TYPE FT
	ON WOH.FORM_TYPE_CODE = FT.FORM_TYPE_CODE
    AND FT.IS_CURRENT_FLAG = TRUE
--SALES REP
LEFT JOIN ANALYTICS.SILVER_SALES.T_DIM_SALES_REP SR
	ON WOH.SALES_REP_SK = SR.SALES_REP_SK
--ITEM
LEFT JOIN ANALYTICS.SILVER_SALES.T_DIM_PRODUCT ITM
	ON WOI.PRODUCT_SK = ITM.PRODUCT_SK
--CATAGORY
LEFT JOIN ANALYTICS.SILVER_SALES.T_DIM_INVENTORY_CATEGORY CAT
	ON ITM.INVENTORY_CATEGORY_SK = CAT.INVENTORY_CATEGORY_SK
--CATAGORY GROUP
LEFT JOIN ANALYTICS.SILVER_SALES.T_DIM_CATEGORY_GROUP CATG
	ON CAT.CATEGORY_ID = CATG.CATEGORY_ID
--CATAGORY GROUP NAME
LEFT JOIN ANALYTICS.SILVER_SALES.T_DIM_CATEGORY_GROUP_NAME CATGN
	ON CATG.GROUP_ID = CATGN.GROUP_ID
--CLASS
LEFT JOIN ANALYTICS.SILVER_SALES.T_DIM_INVENTORY_CLASS CLS
	ON ITM.INVENTORY_CLASS_SK = CLS.INVENTORY_CLASS_SK
--GROUPING DIMENSIONS
GROUP BY 	 WORK_ORDER_STATUS
    ,CAL.FISCAL_DATE
    ,CAL.FISCAL_YEAR
    ,CAL.FISCAL_MONTH
    ,CAL.FISCAL_MONTH_NAME
    ,CAL.FISCAL_QUARTER
    ,CAL.FISCAL_DAY_OF_MONTH
    ,CAL.FISCAL_WEEK_OF_YEAR
    ,CUST.CUSTOMER_NAME
    ,PCUST.CUSTOMER_NAME
    ,CA.ACCOUNT_TYPE_NAME
    ,STR.STORE_NUMBER
    ,STR.STORE_NAME
    ,STR.CITY
    ,STR.STATE
    ,DC.DISTRIBUTION_CENTER_ID
    ,FT.FORM_TYPE_CODE
    ,FT.FORM_TYPE_NAME
    ,SR.SALES_REP_NUMBER
    ,SR.SALES_REP_NAME
    ,CAT.CATEGORY_ID
    ,CAT.CATEGORY_NAME
    ,CATG.GROUP_ID
    ,CATGN.GROUP_NAME
    ,CLS.CLASS_ID
    ,CLS.CLASS_NAME;